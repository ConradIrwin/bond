== Description

Bond is on a mission to improve irb's autocompletion. Aside from doing everything irb's can do and fixing its quirks,
Bond can autocomplete argument(s) to methods, uniquely completing per module, method and argument. Bond brings irb's completion
closer to bash/zsh as it provides a configuration system and a DSL for creating custom completions and completion rules. With
this configuration system, users can customize their irb autocompletion experience and share it with others. Bond is able
to offer more than irb's completion since it uses a Readline C extension to get the full line of input when completing
as opposed to irb's last-word approach.

== Install

Install the gem with:

    sudo gem install bond

== Setup

To start off, replace irb's completion (require 'irb/completion') with Bond's enhanced version in your irbrc :

  require 'bond'
  Bond.start

This gives you more consistent method completion on any object, customizable completions
and argument completion of some 60+ methods including Kernel#system, Kernel#require and some Rails methods.

== Method Argument Completion

== Irb's Inconsistencies

== Underscore Search

    # Firing up a rails console
    bash> script/console
    >> require 'bond'
    => true

    # Set all ActiveRecord::Base descendants to use the predefined underscore search
    >> Bond.complete :object=>ActiveRecord::Base, :search=>:underscore
    => true

    # With this search we can still autocomplete the traditional way.
    # Url is a model object
    >> Url.first.tag_[TAB]
    Url.first.tag_add_and_remove   Url.first.tag_and_save         Url.first.tag_ids=             Url.first.tag_list=            
    Url.first.tag_add_and_save     Url.first.tag_ids              Url.first.tag_list             Url.first.tag_remove_and_save
    >> Url.tag_ad[TAB]
    >> Url.tag_add_and_
    >> Url.tag_add_and_[TAB]
    Url.first.tag_add_and_remove  Url.first.tag_add_and_save 
    >> Url.tag_add_and_s[TAB]
    >> Url.tag_add_and_save

    # But this search goes the extra mile with textmate-like searching.
    # Type just the first letter of each underscored word separated by '_'
    >> Url.first.t_a_a_s[TAB]
    >> Url.first.tag_add_and_save

    # With this search, most multi-worded methods are just a few keystrokes away.
    # If multiple methods match the underscore alias, it still autocompletes the beginning of the method:
    >> Url.first.p[TAB]
    Url.first.partial_updates                  Url.first.pretty_inspect                   Url.first.pretty_print_instance_variables  Url.first.public_methods
    Url.first.partial_updates?                 Url.first.pretty_print                     Url.first.primary_key_prefix_type          
    Url.first.pluralize_table_names            Url.first.pretty_print_cycle               Url.first.private_methods                  
    Url.first.present?                         Url.first.pretty_print_inspect             Url.first.protected_methods
    >> Url.first.p_p[TAB]
    >> Url.first.pretty_print
    >> Url.first.pretty_print_c[TAB]
    >> Url.first.pretty_print_cycle

== Credits
Thanks to Csaba Hank for {providing the C extension}[http://www.creo.hu/~csaba/ruby/irb-enhancements/doc/files/README.html]
which Bond uses to read Readline's full buffer. Thanks also goes out to Takao Kouji for {recently
commiting}[http://svn.ruby-lang.org/cgi-bin/viewvc.cgi/trunk/ext/readline/readline.c?view=diff&r1=24018&r2=24019]
this Readline enhancement to ruby.

== Links
* http://tagaholic.me/2009/07/16/bond-from-irb-with-completion-love.html
* http://tagaholic.me/2009/07/22/better-irb-completion-with-bond.html
* http://tagaholic.me/2009/07/23/mini-irb-and-mini-script-console.html

== Todo
* Load completions that come with a gem easily.
* Make completion actions more synonymous with argument types.
* Cache expensive completion actions.
* Ensure completions work when there is additional, unrelated text to the right of a completion.